name: release

on:
  push:
    tags:
      - 'v*'
    # paths-ignore:
    #   - 'LICENCE'
    #   - '*.md'
    # branches:
    #   - main
    #   - devel

env:
  APP_NAME: 'TorCI'
  NIM_VERSION: '1.6.0'
  MAINTAINER: 'Luca'
  DESC: 'Configuration Interface for TorBox'

jobs:
  build-artefact:
    name: Build artefact
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dist:
          - debian
        codename:
          - buster
        arch:
          - amd64
          - arm

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create artefact
        run: |
          torci_dir=artefact/torci

          mkdir -p $torci_dir

          # Set env
          ARCH=${{ matrix.arch }}

          docker build -t torci:release -f build/${{ matrix.codename }} build
          docker run --rm -v `pwd`:/src/torci -e ARCH=${{ matrix.arch }} torci:release

          # Move binary
          mv torci $torci_dir

          # Copy resources
          cp -r public $torci_dir/public
          cp torci.nimble torci.conf config.nims LICENCE $torci_dir
          
          archive_name=torci_${{ matrix.arch }}.tar.gz

          tar -czvf $archive_name -C artefact torci
          
        shell: bash
      - uses: actions/upload-artifact@v2
        with:
          name: artefact-${{ matrix.dist }}_${{ matrix.arch }}
          path: torci_*.tar.gz

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-ubuntu
      - build-artefact
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Anyway
          draft: false
          prerelease: false

      - name: upload_url
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"

  upload-release:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        dist:
          - debian
        arch:
          - amd64
          - arm
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artefact-${{ matrix.dist }}_${{ matrix.arch }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: torci_${{ matrix.arch }}.tar.gz
          asset_name: torci_${{ matrix.arch }}.tar.gz
          asset_content_type: application/tar+gzip